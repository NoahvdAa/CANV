!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t){e.exports={Router:({base:e="",routes:t=[]}={})=>({__proto__:new Proxy({},{get:(n,r,a)=>(n,...o)=>t.push([r.toUpperCase(),RegExp(`^${(e+n).replace(/(\/?)\*/g,"($1.*)?").replace(/\/$/,"").replace(/:(\w+)(\?)?(\.)?/g,"$2(?<$1>[^/]+)$2$3").replace(/\.(?=[\w(])/,"\\.")}/*$`),o])&&a}),routes:t,async handle(e,...n){let r,a,o=new URL(e.url);for(var[s,i,u]of(e.query=Object.fromEntries(o.searchParams),t))if((s===e.method||"ALL"===s)&&(a=o.pathname.match(i)))for(var c of(e.params=a.groups,u))if(void 0!==(r=await c(e.proxy||e,...n)))return r}})}},function(e,t,n){"use strict";n.r(t);var r=n(0);const a=Object(r.Router)();a.get("/canvas",async()=>{const e=await CANVAS.get("canvas");return new Response(e)}),a.get("/canvas/:id",async({params:e})=>{const{id:t}=e;if(isNaN(t)||t<0||t>9999)return new Response("Invalid ID");const n=JSON.parse(await CANVAS.get("canvas"))[t];return new Response(JSON.stringify(n))}),a.post("/canvas/:id",async e=>{const{id:t}=e.params;if(isNaN(t)||t<0||t>9999)return new Response("Invalid ID");const n=await e.json(),{color:r}=n;if(isNaN(r)||r<0||r>15)return new Response("Invalid color");const a=JSON.parse(await CANVAS.get("canvas"));return a[t]=[parseInt(r),(new Date).getTime()],await CANVAS.put("canvas",JSON.stringify(a)),new Response("ok")}),a.all("*",()=>new Response("404, not found!",{status:404})),addEventListener("fetch",e=>{e.respondWith(a.handle(e.request))})}]);