!function(e){var n={};function t(r){if(n[r])return n[r].exports;var a=n[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,t),a.l=!0,a.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var a in e)t.d(r,a,function(n){return e[n]}.bind(null,a));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=1)}([function(e,n){e.exports={Router:({base:e="",routes:n=[]}={})=>({__proto__:new Proxy({},{get:(t,r,a)=>(t,...s)=>n.push([r.toUpperCase(),RegExp(`^${(e+t).replace(/(\/?)\*/g,"($1.*)?").replace(/\/$/,"").replace(/:(\w+)(\?)?(\.)?/g,"$2(?<$1>[^/]+)$2$3").replace(/\.(?=[\w(])/,"\\.")}/*$`),s])&&a}),routes:n,async handle(e,...t){let r,a,s=new URL(e.url);for(var[o,i,c]of(e.query=Object.fromEntries(s.searchParams),n))if((o===e.method||"ALL"===o)&&(a=s.pathname.match(i)))for(var u of(e.params=a.groups,c))if(void 0!==(r=await u(e.proxy||e,...t)))return r}})}},function(e,n,t){"use strict";t.r(n);var r=t(0);const a={"Access-Control-Allow-Origin":"*","Content-type":"application/json"},s=Object(r.Router)();s.get("/canvas",async()=>{const e=await CANVAS.get("canvas");return new Response(e,{headers:a})}),s.get("/canvas/:id",async({params:e})=>{const{id:n}=e;if(isNaN(n)||n<0||n>9999)return new Response("Invalid ID",{headers:a});const t=JSON.parse(await CANVAS.get("canvas"))[n];return new Response(JSON.stringify(t),{headers:a})}),s.post("/canvas/bulk",async e=>{const n=await e.json();if("object"!=typeof n||!n.length)return new Response("Invalid request",{headers:a});const t=JSON.parse(await CANVAS.get("canvas"));for(const e of n){if(2!==e.length)return new Response("Invalid request",{headers:a});const n=e[0],r=e[1];if(isNaN(n)||n<0||n>9999)return new Response("Invalid ID",{headers:a});if(isNaN(r)||r<0||r>15)return new Response("Invalid color",{headers:a});t[n]=[parseInt(r),(new Date).getTime()]}return await CANVAS.put("canvas",JSON.stringify(t)),new Response({success:!0},{headers:a})}),s.post("/canvas/:id",async e=>{const{id:n}=e.params;if(isNaN(n)||n<0||n>9999)return new Response("Invalid ID",{headers:a});const t=await e.json(),{color:r}=t;if(isNaN(r)||r<0||r>15)return new Response("Invalid color",{headers:a});const s=JSON.parse(await CANVAS.get("canvas"));return s[n]=[parseInt(r),(new Date).getTime()],await CANVAS.put("canvas",JSON.stringify(s)),new Response({success:!0},{headers:a})}),s.all("*",()=>new Response("404, not found!",{status:404})),addEventListener("fetch",e=>{e.respondWith(s.handle(e.request))})}]);